From 0e3ec5da582ec9a871bec9d133f3f647febfcc8c Mon Sep 17 00:00:00 2001
From: 1452018 <1452018@github.com>
Date: Sun, 22 Oct 2017 14:00:47 +0700
Subject: [PATCH] authentication

---
 namemyapp/Gemfile                                  |   2 +-
 namemyapp/Gemfile.lock                             |  14 ++
 namemyapp/app/assets/javascripts/articles.coffee   |   3 -
 namemyapp/app/assets/javascripts/comments.coffee   |   3 -
 namemyapp/app/assets/javascripts/messages.coffee   |   3 -
 namemyapp/app/assets/javascripts/photos.coffee     |   3 -
 namemyapp/app/assets/javascripts/posts.coffee      |   3 -
 namemyapp/app/controllers/home_controllers.rb      |   9 +
 namemyapp/app/controllers/messages_controller.rb   |   5 +
 namemyapp/app/controllers/posts_controller.rb      |   1 +
 .../app/controllers/registrations_controller.rb    |  10 +
 namemyapp/app/helpers/users_helper.rb              |   2 +
 namemyapp/app/models/user.rb                       |   7 +
 .../app/views/devise/confirmations/new.html.erb    |  16 ++
 .../mailer/confirmation_instructions.html.erb      |   5 +
 .../app/views/devise/mailer/email_changed.html.erb |   7 +
 .../views/devise/mailer/password_change.html.erb   |   3 +
 .../mailer/reset_password_instructions.html.erb    |   8 +
 .../devise/mailer/unlock_instructions.html.erb     |   7 +
 namemyapp/app/views/devise/passwords/edit.html.erb |  19 ++
 namemyapp/app/views/devise/passwords/new.html.erb  |  15 ++
 .../app/views/devise/registrations/edit.html.erb   |  27 ++
 .../app/views/devise/registrations/new.html.erb    |  17 ++
 namemyapp/app/views/devise/sessions/new.html.erb   |  15 ++
 namemyapp/app/views/devise/shared/_links.html.erb  |  25 ++
 namemyapp/app/views/devise/unlocks/new.html.erb    |  16 ++
 namemyapp/app/views/layouts/application.html.erb   |  11 +-
 namemyapp/config/application.rb                    |   2 +
 namemyapp/config/environments/development.rb       |  14 +-
 namemyapp/config/initializers/devise.rb            | 277 +++++++++++++++++++++
 namemyapp/config/locales/devise.en.yml             |  64 +++++
 namemyapp/config/routes.rb                         |   6 +-
 .../migrate/20171022011342_devise_create_users.rb  |  43 ++++
 namemyapp/db/schema.rb                             |  19 +-
 namemyapp/docker-compose.yml                       |   2 +-
 namemyapp/test/fixtures/users.yml                  |  11 +
 namemyapp/test/models/user_test.rb                 |   7 +
 37 files changed, 679 insertions(+), 22 deletions(-)
 delete mode 100644 namemyapp/app/assets/javascripts/articles.coffee
 delete mode 100644 namemyapp/app/assets/javascripts/comments.coffee
 delete mode 100644 namemyapp/app/assets/javascripts/messages.coffee
 delete mode 100644 namemyapp/app/assets/javascripts/photos.coffee
 delete mode 100644 namemyapp/app/assets/javascripts/posts.coffee
 create mode 100644 namemyapp/app/controllers/home_controllers.rb
 create mode 100644 namemyapp/app/controllers/registrations_controller.rb
 create mode 100644 namemyapp/app/helpers/users_helper.rb
 create mode 100644 namemyapp/app/models/user.rb
 create mode 100644 namemyapp/app/views/devise/confirmations/new.html.erb
 create mode 100644 namemyapp/app/views/devise/mailer/confirmation_instructions.html.erb
 create mode 100644 namemyapp/app/views/devise/mailer/email_changed.html.erb
 create mode 100644 namemyapp/app/views/devise/mailer/password_change.html.erb
 create mode 100644 namemyapp/app/views/devise/mailer/reset_password_instructions.html.erb
 create mode 100644 namemyapp/app/views/devise/mailer/unlock_instructions.html.erb
 create mode 100644 namemyapp/app/views/devise/passwords/edit.html.erb
 create mode 100644 namemyapp/app/views/devise/passwords/new.html.erb
 create mode 100644 namemyapp/app/views/devise/registrations/edit.html.erb
 create mode 100644 namemyapp/app/views/devise/registrations/new.html.erb
 create mode 100644 namemyapp/app/views/devise/sessions/new.html.erb
 create mode 100644 namemyapp/app/views/devise/shared/_links.html.erb
 create mode 100644 namemyapp/app/views/devise/unlocks/new.html.erb
 create mode 100644 namemyapp/config/initializers/devise.rb
 create mode 100644 namemyapp/config/locales/devise.en.yml
 create mode 100644 namemyapp/db/migrate/20171022011342_devise_create_users.rb
 create mode 100644 namemyapp/test/fixtures/users.yml
 create mode 100644 namemyapp/test/models/user_test.rb

diff --git a/namemyapp/Gemfile b/namemyapp/Gemfile
index 2409416..73a85b5 100644
--- a/namemyapp/Gemfile
+++ b/namemyapp/Gemfile
@@ -37,7 +37,7 @@ gem 'jquery-rails'
 gem 'font-awesome-sass'
 # Use Capistrano for deployment
 # gem 'capistrano-rails', group: :development
-
+gem 'devise'
 group :development, :test do
   # Call 'byebug' anywhere in the code to stop execution and get a debugger console
   gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
diff --git a/namemyapp/Gemfile.lock b/namemyapp/Gemfile.lock
index 8056b60..4380f85 100644
--- a/namemyapp/Gemfile.lock
+++ b/namemyapp/Gemfile.lock
@@ -43,6 +43,7 @@ GEM
     arel (8.0.0)
     autoprefixer-rails (7.1.4.1)
       execjs
+    bcrypt (3.1.11)
     bindex (0.5.0)
     bootstrap (4.0.0.beta)
       autoprefixer-rails (>= 6.0.3)
@@ -68,6 +69,12 @@ GEM
     coffee-script-source (1.12.2)
     concurrent-ruby (1.0.5)
     crass (1.0.2)
+    devise (4.3.0)
+      bcrypt (~> 3.0)
+      orm_adapter (~> 0.1)
+      railties (>= 4.1.0, < 5.2)
+      responders
+      warden (~> 1.2.3)
     erubi (1.6.1)
     execjs (2.7.0)
     ffi (1.9.18)
@@ -104,6 +111,7 @@ GEM
     nio4r (2.1.0)
     nokogiri (1.8.1)
       mini_portile2 (~> 2.3.0)
+    orm_adapter (0.5.0)
     pg (0.21.0)
     popper_js (1.11.1)
     public_suffix (3.0.0)
@@ -139,6 +147,9 @@ GEM
     rb-inotify (0.9.10)
       ffi (>= 0.5.0, < 2)
     ref (2.0.0)
+    responders (2.4.0)
+      actionpack (>= 4.2.0, < 5.3)
+      railties (>= 4.2.0, < 5.3)
     ruby_dep (1.5.0)
     rubyzip (1.2.1)
     sass (3.5.1)
@@ -183,6 +194,8 @@ GEM
       thread_safe (~> 0.1)
     uglifier (3.2.0)
       execjs (>= 0.3.0, < 3)
+    warden (1.2.7)
+      rack (>= 1.0)
     web-console (3.5.1)
       actionview (>= 5.0)
       activemodel (>= 5.0)
@@ -202,6 +215,7 @@ DEPENDENCIES
   byebug
   capybara (~> 2.13)
   coffee-rails (~> 4.2)
+  devise
   font-awesome-sass
   jbuilder (~> 2.5)
   jquery-rails
diff --git a/namemyapp/app/assets/javascripts/articles.coffee b/namemyapp/app/assets/javascripts/articles.coffee
deleted file mode 100644
index 24f83d1..0000000
--- a/namemyapp/app/assets/javascripts/articles.coffee
+++ /dev/null
@@ -1,3 +0,0 @@
-# Place all the behaviors and hooks related to the matching controller here.
-# All this logic will automatically be available in application.js.
-# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/namemyapp/app/assets/javascripts/comments.coffee b/namemyapp/app/assets/javascripts/comments.coffee
deleted file mode 100644
index 24f83d1..0000000
--- a/namemyapp/app/assets/javascripts/comments.coffee
+++ /dev/null
@@ -1,3 +0,0 @@
-# Place all the behaviors and hooks related to the matching controller here.
-# All this logic will automatically be available in application.js.
-# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/namemyapp/app/assets/javascripts/messages.coffee b/namemyapp/app/assets/javascripts/messages.coffee
deleted file mode 100644
index 24f83d1..0000000
--- a/namemyapp/app/assets/javascripts/messages.coffee
+++ /dev/null
@@ -1,3 +0,0 @@
-# Place all the behaviors and hooks related to the matching controller here.
-# All this logic will automatically be available in application.js.
-# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/namemyapp/app/assets/javascripts/photos.coffee b/namemyapp/app/assets/javascripts/photos.coffee
deleted file mode 100644
index 24f83d1..0000000
--- a/namemyapp/app/assets/javascripts/photos.coffee
+++ /dev/null
@@ -1,3 +0,0 @@
-# Place all the behaviors and hooks related to the matching controller here.
-# All this logic will automatically be available in application.js.
-# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/namemyapp/app/assets/javascripts/posts.coffee b/namemyapp/app/assets/javascripts/posts.coffee
deleted file mode 100644
index 24f83d1..0000000
--- a/namemyapp/app/assets/javascripts/posts.coffee
+++ /dev/null
@@ -1,3 +0,0 @@
-# Place all the behaviors and hooks related to the matching controller here.
-# All this logic will automatically be available in application.js.
-# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/namemyapp/app/controllers/home_controllers.rb b/namemyapp/app/controllers/home_controllers.rb
new file mode 100644
index 0000000..39060e9
--- /dev/null
+++ b/namemyapp/app/controllers/home_controllers.rb
@@ -0,0 +1,9 @@
+class HomeController < ApplicationController
+  def index
+    if user_signed_in?
+      redirect_to posts_path
+    else
+      redirect_to new_user_session_path
+  end
+
+end
diff --git a/namemyapp/app/controllers/messages_controller.rb b/namemyapp/app/controllers/messages_controller.rb
index 1f6447d..d1d9a40 100644
--- a/namemyapp/app/controllers/messages_controller.rb
+++ b/namemyapp/app/controllers/messages_controller.rb
@@ -1,7 +1,12 @@
 class MessagesController < ApplicationController
   def index
     @messages = Message.all
+    if user_signed_in?
+      redirect_to posts_path
+    else
+      redirect_to new_user_session_path
   end
+end
 
   def new
     @message = Message.new
diff --git a/namemyapp/app/controllers/posts_controller.rb b/namemyapp/app/controllers/posts_controller.rb
index 336dcbc..037a0e6 100644
--- a/namemyapp/app/controllers/posts_controller.rb
+++ b/namemyapp/app/controllers/posts_controller.rb
@@ -1,4 +1,5 @@
 class PostsController < ApplicationController
+  before_action :authenticate_user!
   before_action :set_post, only: [:show, :edit, :update, :destroy]
 
   # GET /posts
diff --git a/namemyapp/app/controllers/registrations_controller.rb b/namemyapp/app/controllers/registrations_controller.rb
new file mode 100644
index 0000000..957ce57
--- /dev/null
+++ b/namemyapp/app/controllers/registrations_controller.rb
@@ -0,0 +1,10 @@
+class RegistrationsController < Devise::RegistrationsController
+  private
+  def sign_up_params
+    params.require(:user).permit(:name,:email,:password,:password_confirmation)
+  end
+
+  def account_update_params
+    params.require(:user).permit(:name, :email, :password, :password_confirmation, :current_password)
+  end
+end
diff --git a/namemyapp/app/helpers/users_helper.rb b/namemyapp/app/helpers/users_helper.rb
new file mode 100644
index 0000000..2310a24
--- /dev/null
+++ b/namemyapp/app/helpers/users_helper.rb
@@ -0,0 +1,2 @@
+module UsersHelper
+end
diff --git a/namemyapp/app/models/user.rb b/namemyapp/app/models/user.rb
new file mode 100644
index 0000000..5ea265f
--- /dev/null
+++ b/namemyapp/app/models/user.rb
@@ -0,0 +1,7 @@
+class User < ApplicationRecord
+  # Include default devise modules. Others available are:
+  # :confirmable, :lockable, :timeoutable and :omniauthable
+  devise :database_authenticatable, :registerable,
+         :recoverable, :rememberable, :trackable, :validatable
+ 
+end
diff --git a/namemyapp/app/views/devise/confirmations/new.html.erb b/namemyapp/app/views/devise/confirmations/new.html.erb
new file mode 100644
index 0000000..949b172
--- /dev/null
+++ b/namemyapp/app/views/devise/confirmations/new.html.erb
@@ -0,0 +1,16 @@
+<h2>Resend confirmation instructions</h2>
+
+<%= simple_form_for(resource, as: resource_name, url: confirmation_path(resource_name), html: { method: :post }) do |f| %>
+  <%= f.error_notification %>
+  <%= f.full_error :confirmation_token %>
+
+  <div class="form-inputs">
+    <%= f.input :email, required: true, autofocus: true %>
+  </div>
+
+  <div class="form-actions">
+    <%= f.button :submit, "Resend confirmation instructions" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/namemyapp/app/views/devise/mailer/confirmation_instructions.html.erb b/namemyapp/app/views/devise/mailer/confirmation_instructions.html.erb
new file mode 100644
index 0000000..dc55f64
--- /dev/null
+++ b/namemyapp/app/views/devise/mailer/confirmation_instructions.html.erb
@@ -0,0 +1,5 @@
+<p>Welcome <%= @email %>!</p>
+
+<p>You can confirm your account email through the link below:</p>
+
+<p><%= link_to 'Confirm my account', confirmation_url(@resource, confirmation_token: @token) %></p>
diff --git a/namemyapp/app/views/devise/mailer/email_changed.html.erb b/namemyapp/app/views/devise/mailer/email_changed.html.erb
new file mode 100644
index 0000000..32f4ba8
--- /dev/null
+++ b/namemyapp/app/views/devise/mailer/email_changed.html.erb
@@ -0,0 +1,7 @@
+<p>Hello <%= @email %>!</p>
+
+<% if @resource.try(:unconfirmed_email?) %>
+  <p>We're contacting you to notify you that your email is being changed to <%= @resource.unconfirmed_email %>.</p>
+<% else %>
+  <p>We're contacting you to notify you that your email has been changed to <%= @resource.email %>.</p>
+<% end %>
diff --git a/namemyapp/app/views/devise/mailer/password_change.html.erb b/namemyapp/app/views/devise/mailer/password_change.html.erb
new file mode 100644
index 0000000..b41daf4
--- /dev/null
+++ b/namemyapp/app/views/devise/mailer/password_change.html.erb
@@ -0,0 +1,3 @@
+<p>Hello <%= @resource.email %>!</p>
+
+<p>We're contacting you to notify you that your password has been changed.</p>
diff --git a/namemyapp/app/views/devise/mailer/reset_password_instructions.html.erb b/namemyapp/app/views/devise/mailer/reset_password_instructions.html.erb
new file mode 100644
index 0000000..f667dc1
--- /dev/null
+++ b/namemyapp/app/views/devise/mailer/reset_password_instructions.html.erb
@@ -0,0 +1,8 @@
+<p>Hello <%= @resource.email %>!</p>
+
+<p>Someone has requested a link to change your password. You can do this through the link below.</p>
+
+<p><%= link_to 'Change my password', edit_password_url(@resource, reset_password_token: @token) %></p>
+
+<p>If you didn't request this, please ignore this email.</p>
+<p>Your password won't change until you access the link above and create a new one.</p>
diff --git a/namemyapp/app/views/devise/mailer/unlock_instructions.html.erb b/namemyapp/app/views/devise/mailer/unlock_instructions.html.erb
new file mode 100644
index 0000000..41e148b
--- /dev/null
+++ b/namemyapp/app/views/devise/mailer/unlock_instructions.html.erb
@@ -0,0 +1,7 @@
+<p>Hello <%= @resource.email %>!</p>
+
+<p>Your account has been locked due to an excessive number of unsuccessful sign in attempts.</p>
+
+<p>Click the link below to unlock your account:</p>
+
+<p><%= link_to 'Unlock my account', unlock_url(@resource, unlock_token: @token) %></p>
diff --git a/namemyapp/app/views/devise/passwords/edit.html.erb b/namemyapp/app/views/devise/passwords/edit.html.erb
new file mode 100644
index 0000000..a938930
--- /dev/null
+++ b/namemyapp/app/views/devise/passwords/edit.html.erb
@@ -0,0 +1,19 @@
+<h2>Change your password</h2>
+
+<%= simple_form_for(resource, as: resource_name, url: password_path(resource_name), html: { method: :put }) do |f| %>
+  <%= f.error_notification %>
+
+  <%= f.input :reset_password_token, as: :hidden %>
+  <%= f.full_error :reset_password_token %>
+
+  <div class="form-inputs">
+    <%= f.input :password, label: "New password", required: true, autofocus: true, hint: ("#{@minimum_password_length} characters minimum" if @minimum_password_length) %>
+    <%= f.input :password_confirmation, label: "Confirm your new password", required: true %>
+  </div>
+
+  <div class="form-actions">
+    <%= f.button :submit, "Change my password" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/namemyapp/app/views/devise/passwords/new.html.erb b/namemyapp/app/views/devise/passwords/new.html.erb
new file mode 100644
index 0000000..d1503e7
--- /dev/null
+++ b/namemyapp/app/views/devise/passwords/new.html.erb
@@ -0,0 +1,15 @@
+<h2>Forgot your password?</h2>
+
+<%= simple_form_for(resource, as: resource_name, url: password_path(resource_name), html: { method: :post }) do |f| %>
+  <%= f.error_notification %>
+
+  <div class="form-inputs">
+    <%= f.input :email, required: true, autofocus: true %>
+  </div>
+
+  <div class="form-actions">
+    <%= f.button :submit, "Send me reset password instructions" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/namemyapp/app/views/devise/registrations/edit.html.erb b/namemyapp/app/views/devise/registrations/edit.html.erb
new file mode 100644
index 0000000..5db350b
--- /dev/null
+++ b/namemyapp/app/views/devise/registrations/edit.html.erb
@@ -0,0 +1,27 @@
+<h2>Edit <%= resource_name.to_s.humanize %></h2>
+
+<%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
+  <%= f.error_notification %>
+
+  <div class="form-inputs">
+    <%= f.input :email, required: true, autofocus: true %>
+
+    <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
+      <p>Currently waiting confirmation for: <%= resource.unconfirmed_email %></p>
+    <% end %>
+
+    <%= f.input :password, autocomplete: "off", hint: "leave it blank if you don't want to change it", required: false %>
+    <%= f.input :password_confirmation, required: false %>
+    <%= f.input :current_password, hint: "we need your current password to confirm your changes", required: true %>
+  </div>
+
+  <div class="form-actions">
+    <%= f.button :submit, "Update" %>
+  </div>
+<% end %>
+
+<h3>Cancel my account</h3>
+
+<p>Unhappy? <%= link_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete %></p>
+
+<%= link_to "Back", :back %>
diff --git a/namemyapp/app/views/devise/registrations/new.html.erb b/namemyapp/app/views/devise/registrations/new.html.erb
new file mode 100644
index 0000000..34b4279
--- /dev/null
+++ b/namemyapp/app/views/devise/registrations/new.html.erb
@@ -0,0 +1,17 @@
+<h2>Sign up</h2>
+
+<%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name)) do |f| %>
+  <%= f.error_notification %>
+
+  <div class="form-inputs">
+    <%= f.input :email, required: true, autofocus: true %>
+    <%= f.input :password, required: true, hint: ("#{@minimum_password_length} characters minimum" if @minimum_password_length) %>
+    <%= f.input :password_confirmation, required: true %>
+  </div>
+
+  <div class="form-actions">
+    <%= f.button :submit, "Sign up" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/namemyapp/app/views/devise/sessions/new.html.erb b/namemyapp/app/views/devise/sessions/new.html.erb
new file mode 100644
index 0000000..31f8a4d
--- /dev/null
+++ b/namemyapp/app/views/devise/sessions/new.html.erb
@@ -0,0 +1,15 @@
+<h2>Log in</h2>
+
+<%= simple_form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
+  <div class="form-inputs">
+    <%= f.input :email, required: false, autofocus: true %>
+    <%= f.input :password, required: false %>
+    <%= f.input :remember_me, as: :boolean if devise_mapping.rememberable? %>
+  </div>
+
+  <div class="form-actions">
+    <%= f.button :submit, "Log in" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/namemyapp/app/views/devise/shared/_links.html.erb b/namemyapp/app/views/devise/shared/_links.html.erb
new file mode 100644
index 0000000..e6a3e41
--- /dev/null
+++ b/namemyapp/app/views/devise/shared/_links.html.erb
@@ -0,0 +1,25 @@
+<%- if controller_name != 'sessions' %>
+  <%= link_to "Log in", new_session_path(resource_name) %><br />
+<% end -%>
+
+<%- if devise_mapping.registerable? && controller_name != 'registrations' %>
+  <%= link_to "Sign up", new_registration_path(resource_name) %><br />
+<% end -%>
+
+<%- if devise_mapping.recoverable? && controller_name != 'passwords' && controller_name != 'registrations' %>
+  <%= link_to "Forgot your password?", new_password_path(resource_name) %><br />
+<% end -%>
+
+<%- if devise_mapping.confirmable? && controller_name != 'confirmations' %>
+  <%= link_to "Didn't receive confirmation instructions?", new_confirmation_path(resource_name) %><br />
+<% end -%>
+
+<%- if devise_mapping.lockable? && resource_class.unlock_strategy_enabled?(:email) && controller_name != 'unlocks' %>
+  <%= link_to "Didn't receive unlock instructions?", new_unlock_path(resource_name) %><br />
+<% end -%>
+
+<%- if devise_mapping.omniauthable? %>
+  <%- resource_class.omniauth_providers.each do |provider| %>
+    <%= link_to "Sign in with #{OmniAuth::Utils.camelize(provider)}", omniauth_authorize_path(resource_name, provider) %><br />
+  <% end -%>
+<% end -%>
diff --git a/namemyapp/app/views/devise/unlocks/new.html.erb b/namemyapp/app/views/devise/unlocks/new.html.erb
new file mode 100644
index 0000000..788f62e
--- /dev/null
+++ b/namemyapp/app/views/devise/unlocks/new.html.erb
@@ -0,0 +1,16 @@
+<h2>Resend unlock instructions</h2>
+
+<%= simple_form_for(resource, as: resource_name, url: unlock_path(resource_name), html: { method: :post }) do |f| %>
+  <%= f.error_notification %>
+  <%= f.full_error :unlock_token %>
+
+  <div class="form-inputs">
+    <%= f.input :email, required: true, autofocus: true %>
+  </div>
+
+  <div class="form-actions">
+    <%= f.button :submit, "Resend unlock instructions" %>
+  </div>
+<% end %>
+
+<%= render "devise/shared/links" %>
diff --git a/namemyapp/app/views/layouts/application.html.erb b/namemyapp/app/views/layouts/application.html.erb
index 69d1a30..fffb2f0 100644
--- a/namemyapp/app/views/layouts/application.html.erb
+++ b/namemyapp/app/views/layouts/application.html.erb
@@ -16,7 +16,12 @@
     <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
       <span class="navbar-toggler-icon"></span>
     </button>
-
+    <% if notice %>
+  <p class="alert alert-success"><%= notice %></p>
+<% end %>
+<% if alert %>
+  <p class="alert alert-danger"><%= alert %></p>
+<% end %>
     <div class="collapse navbar-collapse" id="navbarSupportedContent">
       <ul class="navbar-nav mr-auto">
         <li class="nav-item active">
@@ -42,5 +47,9 @@
   <div class="container">
     <%= yield %>
   </div>
+  <body>
+    <% if user_signed_in? %>
+    <p> Hello <%= link_to "Sign out", destroy_user_session_path, :method => 'delete' %> </p>
+    <% end %>
   </body>
 </html>
diff --git a/namemyapp/config/application.rb b/namemyapp/config/application.rb
index 262ad40..88fecdf 100644
--- a/namemyapp/config/application.rb
+++ b/namemyapp/config/application.rb
@@ -14,5 +14,7 @@ module Web
     # Settings in config/environments/* take precedence over those specified here.
     # Application configuration should go into files in config/initializers
     # -- all .rb files in that directory are automatically loaded.
+      
+
   end
 end
diff --git a/namemyapp/config/environments/development.rb b/namemyapp/config/environments/development.rb
index 5187e22..f6cf42a 100644
--- a/namemyapp/config/environments/development.rb
+++ b/namemyapp/config/environments/development.rb
@@ -44,10 +44,20 @@ Rails.application.configure do
 
   # Suppress logger output for asset requests.
   config.assets.quiet = true
-
+  config.action_mailer.default_url_options = { host: 'localhost', port: 3000 }
   # Raises error for missing translations
   # config.action_view.raise_on_missing_translations = true
-
+  config.action_mailer.delivery_method = :smtp
+  config.action_mailer.smtp_settings =
+  {
+    :address  => "smtp.gmail.com",
+    :port=> 587,
+    :domain =>ENV["mail.google.com"],
+    :user_name => ENV["mcgregor39142@gmail.com"],
+    :password => ENV["0989215263"],
+    :authentication => "login",
+    :enable_starttls_auto => true
+  }
   # Use an evented file watcher to asynchronously detect changes in source code,
   # routes, locales, etc. This feature depends on the listen gem.
   config.file_watcher = ActiveSupport::EventedFileUpdateChecker
diff --git a/namemyapp/config/initializers/devise.rb b/namemyapp/config/initializers/devise.rb
new file mode 100644
index 0000000..733e637
--- /dev/null
+++ b/namemyapp/config/initializers/devise.rb
@@ -0,0 +1,277 @@
+# Use this hook to configure devise mailer, warden hooks and so forth.
+# Many of these configuration options can be set straight in your model.
+Devise.setup do |config|
+  # The secret key used by Devise. Devise uses this key to generate
+  # random tokens. Changing this key will render invalid all existing
+  # confirmation, reset password and unlock tokens in the database.
+  # Devise will use the `secret_key_base` as its `secret_key`
+  # by default. You can change it below and use your own secret key.
+  # config.secret_key = '2ce6c6aae988a79321059eed3f5496f3fda9a5f2c8df0adf817596153185c25386f8940148e9b447fab9229fbe57bc71301e6c53b7c50375d580b2fb6953da98'
+
+  # ==> Mailer Configuration
+  # Configure the e-mail address which will be shown in Devise::Mailer,
+  # note that it will be overwritten if you use your own mailer class
+  # with default "from" parameter.
+  config.mailer_sender = 'please-change-me-at-config-initializers-devise@example.com'
+
+  # Configure the class responsible to send e-mails.
+  # config.mailer = 'Devise::Mailer'
+
+  # Configure the parent class responsible to send e-mails.
+  # config.parent_mailer = 'ActionMailer::Base'
+
+  # ==> ORM configuration
+  # Load and configure the ORM. Supports :active_record (default) and
+  # :mongoid (bson_ext recommended) by default. Other ORMs may be
+  # available as additional gems.
+  require 'devise/orm/active_record'
+
+  # ==> Configuration for any authentication mechanism
+  # Configure which keys are used when authenticating a user. The default is
+  # just :email. You can configure it to use [:username, :subdomain], so for
+  # authenticating a user, both parameters are required. Remember that those
+  # parameters are used only when authenticating and not when retrieving from
+  # session. If you need permissions, you should implement that in a before filter.
+  # You can also supply a hash where the value is a boolean determining whether
+  # or not authentication should be aborted when the value is not present.
+  # config.authentication_keys = [:email]
+
+  # Configure parameters from the request object used for authentication. Each entry
+  # given should be a request method and it will automatically be passed to the
+  # find_for_authentication method and considered in your model lookup. For instance,
+  # if you set :request_keys to [:subdomain], :subdomain will be used on authentication.
+  # The same considerations mentioned for authentication_keys also apply to request_keys.
+  # config.request_keys = []
+
+  # Configure which authentication keys should be case-insensitive.
+  # These keys will be downcased upon creating or modifying a user and when used
+  # to authenticate or find a user. Default is :email.
+  config.case_insensitive_keys = [:email]
+
+  # Configure which authentication keys should have whitespace stripped.
+  # These keys will have whitespace before and after removed upon creating or
+  # modifying a user and when used to authenticate or find a user. Default is :email.
+  config.strip_whitespace_keys = [:email]
+
+  # Tell if authentication through request.params is enabled. True by default.
+  # It can be set to an array that will enable params authentication only for the
+  # given strategies, for example, `config.params_authenticatable = [:database]` will
+  # enable it only for database (email + password) authentication.
+  # config.params_authenticatable = true
+
+  # Tell if authentication through HTTP Auth is enabled. False by default.
+  # It can be set to an array that will enable http authentication only for the
+  # given strategies, for example, `config.http_authenticatable = [:database]` will
+  # enable it only for database authentication. The supported strategies are:
+  # :database      = Support basic authentication with authentication key + password
+  # config.http_authenticatable = false
+
+  # If 401 status code should be returned for AJAX requests. True by default.
+  # config.http_authenticatable_on_xhr = true
+
+  # The realm used in Http Basic Authentication. 'Application' by default.
+  # config.http_authentication_realm = 'Application'
+
+  # It will change confirmation, password recovery and other workflows
+  # to behave the same regardless if the e-mail provided was right or wrong.
+  # Does not affect registerable.
+  # config.paranoid = true
+
+  # By default Devise will store the user in session. You can skip storage for
+  # particular strategies by setting this option.
+  # Notice that if you are skipping storage for all authentication paths, you
+  # may want to disable generating routes to Devise's sessions controller by
+  # passing skip: :sessions to `devise_for` in your config/routes.rb
+  config.skip_session_storage = [:http_auth]
+
+  # By default, Devise cleans up the CSRF token on authentication to
+  # avoid CSRF token fixation attacks. This means that, when using AJAX
+  # requests for sign in and sign up, you need to get a new CSRF token
+  # from the server. You can disable this option at your own risk.
+  # config.clean_up_csrf_token_on_authentication = true
+
+  # When false, Devise will not attempt to reload routes on eager load.
+  # This can reduce the time taken to boot the app but if your application
+  # requires the Devise mappings to be loaded during boot time the application
+  # won't boot properly.
+  # config.reload_routes = true
+
+  # ==> Configuration for :database_authenticatable
+  # For bcrypt, this is the cost for hashing the password and defaults to 11. If
+  # using other algorithms, it sets how many times you want the password to be hashed.
+  #
+  # Limiting the stretches to just one in testing will increase the performance of
+  # your test suite dramatically. However, it is STRONGLY RECOMMENDED to not use
+  # a value less than 10 in other environments. Note that, for bcrypt (the default
+  # algorithm), the cost increases exponentially with the number of stretches (e.g.
+  # a value of 20 is already extremely slow: approx. 60 seconds for 1 calculation).
+  config.stretches = Rails.env.test? ? 1 : 11
+
+  # Set up a pepper to generate the hashed password.
+  # config.pepper = '48105f09ab588299a0765596a0a2d0a45297e08cdcabdf6bb2d21c746001c19b240aca775b65637adc3a2ef3356ecab76fc47a1a1b7c151733e6ff559828a7b8'
+
+  # Send a notification to the original email when the user's email is changed.
+  # config.send_email_changed_notification = false
+
+  # Send a notification email when the user's password is changed.
+  # config.send_password_change_notification = false
+
+  # ==> Configuration for :confirmable
+  # A period that the user is allowed to access the website even without
+  # confirming their account. For instance, if set to 2.days, the user will be
+  # able to access the website for two days without confirming their account,
+  # access will be blocked just in the third day. Default is 0.days, meaning
+  # the user cannot access the website without confirming their account.
+  # config.allow_unconfirmed_access_for = 2.days
+
+  # A period that the user is allowed to confirm their account before their
+  # token becomes invalid. For example, if set to 3.days, the user can confirm
+  # their account within 3 days after the mail was sent, but on the fourth day
+  # their account can't be confirmed with the token any more.
+  # Default is nil, meaning there is no restriction on how long a user can take
+  # before confirming their account.
+  # config.confirm_within = 3.days
+
+  # If true, requires any email changes to be confirmed (exactly the same way as
+  # initial account confirmation) to be applied. Requires additional unconfirmed_email
+  # db field (see migrations). Until confirmed, new email is stored in
+  # unconfirmed_email column, and copied to email column on successful confirmation.
+  config.reconfirmable = true
+
+  # Defines which key will be used when confirming an account
+  # config.confirmation_keys = [:email]
+
+  # ==> Configuration for :rememberable
+  # The time the user will be remembered without asking for credentials again.
+  # config.remember_for = 2.weeks
+
+  # Invalidates all the remember me tokens when the user signs out.
+  config.expire_all_remember_me_on_sign_out = true
+
+  # If true, extends the user's remember period when remembered via cookie.
+  # config.extend_remember_period = false
+
+  # Options to be passed to the created cookie. For instance, you can set
+  # secure: true in order to force SSL only cookies.
+  # config.rememberable_options = {}
+
+  # ==> Configuration for :validatable
+  # Range for password length.
+  config.password_length = 6..128
+
+  # Email regex used to validate email formats. It simply asserts that
+  # one (and only one) @ exists in the given string. This is mainly
+  # to give user feedback and not to assert the e-mail validity.
+  config.email_regexp = /\A[^@\s]+@[^@\s]+\z/
+
+  # ==> Configuration for :timeoutable
+  # The time you want to timeout the user session without activity. After this
+  # time the user will be asked for credentials again. Default is 30 minutes.
+  # config.timeout_in = 30.minutes
+
+  # ==> Configuration for :lockable
+  # Defines which strategy will be used to lock an account.
+  # :failed_attempts = Locks an account after a number of failed attempts to sign in.
+  # :none            = No lock strategy. You should handle locking by yourself.
+  # config.lock_strategy = :failed_attempts
+
+  # Defines which key will be used when locking and unlocking an account
+  # config.unlock_keys = [:email]
+
+  # Defines which strategy will be used to unlock an account.
+  # :email = Sends an unlock link to the user email
+  # :time  = Re-enables login after a certain amount of time (see :unlock_in below)
+  # :both  = Enables both strategies
+  # :none  = No unlock strategy. You should handle unlocking by yourself.
+  # config.unlock_strategy = :both
+
+  # Number of authentication tries before locking an account if lock_strategy
+  # is failed attempts.
+  # config.maximum_attempts = 20
+
+  # Time interval to unlock the account if :time is enabled as unlock_strategy.
+  # config.unlock_in = 1.hour
+
+  # Warn on the last attempt before the account is locked.
+  # config.last_attempt_warning = true
+
+  # ==> Configuration for :recoverable
+  #
+  # Defines which key will be used when recovering the password for an account
+  # config.reset_password_keys = [:email]
+
+  # Time interval you can reset your password with a reset password key.
+  # Don't put a too small interval or your users won't have the time to
+  # change their passwords.
+  config.reset_password_within = 6.hours
+
+  # When set to false, does not sign a user in automatically after their password is
+  # reset. Defaults to true, so a user is signed in automatically after a reset.
+  # config.sign_in_after_reset_password = true
+
+  # ==> Configuration for :encryptable
+  # Allow you to use another hashing or encryption algorithm besides bcrypt (default).
+  # You can use :sha1, :sha512 or algorithms from others authentication tools as
+  # :clearance_sha1, :authlogic_sha512 (then you should set stretches above to 20
+  # for default behavior) and :restful_authentication_sha1 (then you should set
+  # stretches to 10, and copy REST_AUTH_SITE_KEY to pepper).
+  #
+  # Require the `devise-encryptable` gem when using anything other than bcrypt
+  # config.encryptor = :sha512
+
+  # ==> Scopes configuration
+  # Turn scoped views on. Before rendering "sessions/new", it will first check for
+  # "users/sessions/new". It's turned off by default because it's slower if you
+  # are using only default views.
+  # config.scoped_views = false
+
+  # Configure the default scope given to Warden. By default it's the first
+  # devise role declared in your routes (usually :user).
+  # config.default_scope = :user
+
+  # Set this configuration to false if you want /users/sign_out to sign out
+  # only the current scope. By default, Devise signs out all scopes.
+  # config.sign_out_all_scopes = true
+
+  # ==> Navigation configuration
+  # Lists the formats that should be treated as navigational. Formats like
+  # :html, should redirect to the sign in page when the user does not have
+  # access, but formats like :xml or :json, should return 401.
+  #
+  # If you have any extra navigational formats, like :iphone or :mobile, you
+  # should add them to the navigational formats lists.
+  #
+  # The "*/*" below is required to match Internet Explorer requests.
+  # config.navigational_formats = ['*/*', :html]
+
+  # The default HTTP method used to sign out a resource. Default is :delete.
+  config.sign_out_via = :delete
+
+  # ==> OmniAuth
+  # Add a new OmniAuth provider. Check the wiki for more information on setting
+  # up on your models and hooks.
+  # config.omniauth :github, 'APP_ID', 'APP_SECRET', scope: 'user,public_repo'
+
+  # ==> Warden configuration
+  # If you want to use other strategies, that are not supported by Devise, or
+  # change the failure app, you can configure them inside the config.warden block.
+  #
+  # config.warden do |manager|
+  #   manager.intercept_401 = false
+  #   manager.default_strategies(scope: :user).unshift :some_external_strategy
+  # end
+
+  # ==> Mountable engine configurations
+  # When using Devise inside an engine, let's call it `MyEngine`, and this engine
+  # is mountable, there are some extra configurations to be taken into account.
+  # The following options are available, assuming the engine is mounted as:
+  #
+  #     mount MyEngine, at: '/my_engine'
+  #
+  # The router that invoked `devise_for`, in the example above, would be:
+  # config.router_name = :my_engine
+  #
+  # When using OmniAuth, Devise cannot automatically set OmniAuth path,
+  # so you need to do it manually. For the users scope, it would be:
+  # config.omniauth_path_prefix = '/my_engine/users/auth'
+end
diff --git a/namemyapp/config/locales/devise.en.yml b/namemyapp/config/locales/devise.en.yml
new file mode 100644
index 0000000..0b8f130
--- /dev/null
+++ b/namemyapp/config/locales/devise.en.yml
@@ -0,0 +1,64 @@
+# Additional translations at https://github.com/plataformatec/devise/wiki/I18n
+
+en:
+  devise:
+    confirmations:
+      confirmed: "Your email address has been successfully confirmed."
+      send_instructions: "You will receive an email with instructions for how to confirm your email address in a few minutes."
+      send_paranoid_instructions: "If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes."
+    failure:
+      already_authenticated: "You are already signed in."
+      inactive: "Your account is not activated yet."
+      invalid: "Invalid %{authentication_keys} or password."
+      locked: "Your account is locked."
+      last_attempt: "You have one more attempt before your account is locked."
+      not_found_in_database: "Invalid %{authentication_keys} or password."
+      timeout: "Your session expired. Please sign in again to continue."
+      unauthenticated: "You need to sign in or sign up before continuing."
+      unconfirmed: "You have to confirm your email address before continuing."
+    mailer:
+      confirmation_instructions:
+        subject: "Confirmation instructions"
+      reset_password_instructions:
+        subject: "Reset password instructions"
+      unlock_instructions:
+        subject: "Unlock instructions"
+      email_changed:
+        subject: "Email Changed"
+      password_change:
+        subject: "Password Changed"
+    omniauth_callbacks:
+      failure: "Could not authenticate you from %{kind} because \"%{reason}\"."
+      success: "Successfully authenticated from %{kind} account."
+    passwords:
+      no_token: "You can't access this page without coming from a password reset email. If you do come from a password reset email, please make sure you used the full URL provided."
+      send_instructions: "You will receive an email with instructions on how to reset your password in a few minutes."
+      send_paranoid_instructions: "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes."
+      updated: "Your password has been changed successfully. You are now signed in."
+      updated_not_active: "Your password has been changed successfully."
+    registrations:
+      destroyed: "Bye! Your account has been successfully cancelled. We hope to see you again soon."
+      signed_up: "Welcome! You have signed up successfully."
+      signed_up_but_inactive: "You have signed up successfully. However, we could not sign you in because your account is not yet activated."
+      signed_up_but_locked: "You have signed up successfully. However, we could not sign you in because your account is locked."
+      signed_up_but_unconfirmed: "A message with a confirmation link has been sent to your email address. Please follow the link to activate your account."
+      update_needs_confirmation: "You updated your account successfully, but we need to verify your new email address. Please check your email and follow the confirm link to confirm your new email address."
+      updated: "Your account has been updated successfully."
+    sessions:
+      signed_in: "Signed in successfully."
+      signed_out: "Signed out successfully."
+      already_signed_out: "Signed out successfully."
+    unlocks:
+      send_instructions: "You will receive an email with instructions for how to unlock your account in a few minutes."
+      send_paranoid_instructions: "If your account exists, you will receive an email with instructions for how to unlock it in a few minutes."
+      unlocked: "Your account has been unlocked successfully. Please sign in to continue."
+  errors:
+    messages:
+      already_confirmed: "was already confirmed, please try signing in"
+      confirmation_period_expired: "needs to be confirmed within %{period}, please request a new one"
+      expired: "has expired, please request a new one"
+      not_found: "not found"
+      not_locked: "was not locked"
+      not_saved:
+        one: "1 error prohibited this %{resource} from being saved:"
+        other: "%{count} errors prohibited this %{resource} from being saved:"
diff --git a/namemyapp/config/routes.rb b/namemyapp/config/routes.rb
index e9b9941..f8b18f7 100644
--- a/namemyapp/config/routes.rb
+++ b/namemyapp/config/routes.rb
@@ -7,5 +7,9 @@ Rails.application.routes.draw do
   resources :photos, only: [:index]
   resources :messages
   root 'messages#index'
+  #devise_scope :user do
+  #get 'sign_in', to: 'devise/sessions#newp
+  #end
+  devise_for :users, controllers: {registrations: "registrations"}
+
 end
-  
diff --git a/namemyapp/db/migrate/20171022011342_devise_create_users.rb b/namemyapp/db/migrate/20171022011342_devise_create_users.rb
new file mode 100644
index 0000000..f577504
--- /dev/null
+++ b/namemyapp/db/migrate/20171022011342_devise_create_users.rb
@@ -0,0 +1,43 @@
+class DeviseCreateUsers < ActiveRecord::Migration[5.0]
+  def change
+    create_table :users do |t|
+      ## Database authenticatable
+      t.string :name
+      t.string :email,              null: false, default: ""
+      t.string :encrypted_password, null: false, default: ""
+
+      ## Recoverable
+      t.string   :reset_password_token
+      t.datetime :reset_password_sent_at
+
+      ## Rememberable
+      t.datetime :remember_created_at
+
+      ## Trackable
+      t.integer  :sign_in_count, default: 0, null: false
+      t.datetime :current_sign_in_at
+      t.datetime :last_sign_in_at
+      t.string   :current_sign_in_ip
+      t.string   :last_sign_in_ip
+
+      ## Confirmable
+      # t.string   :confirmation_token
+      # t.datetime :confirmed_at
+      # t.datetime :confirmation_sent_at
+      # t.string   :unconfirmed_email # Only if using reconfirmable
+
+      ## Lockable
+      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
+      # t.string   :unlock_token # Only if unlock strategy is :email or :both
+      # t.datetime :locked_at
+
+
+      t.timestamps null: false
+    end
+
+    add_index :users, :email,                unique: true
+    add_index :users, :reset_password_token, unique: true
+    # add_index :users, :confirmation_token,   unique: true
+    # add_index :users, :unlock_token,         unique: true
+  end
+end
diff --git a/namemyapp/db/schema.rb b/namemyapp/db/schema.rb
index 337b6ad..c9346ed 100644
--- a/namemyapp/db/schema.rb
+++ b/namemyapp/db/schema.rb
@@ -10,7 +10,7 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 20171020044451) do
+ActiveRecord::Schema.define(version: 20171022011342) do
 
   # These are extensions that must be enabled in order to support this database
   enable_extension "plpgsql"
@@ -38,4 +38,21 @@ ActiveRecord::Schema.define(version: 20171020044451) do
     t.datetime "updated_at", null: false
   end
 
+  create_table "users", id: :serial, force: :cascade do |t|
+    t.string "email", default: "", null: false
+    t.string "encrypted_password", default: "", null: false
+    t.string "reset_password_token"
+    t.datetime "reset_password_sent_at"
+    t.datetime "remember_created_at"
+    t.integer "sign_in_count", default: 0, null: false
+    t.datetime "current_sign_in_at"
+    t.datetime "last_sign_in_at"
+    t.string "current_sign_in_ip"
+    t.string "last_sign_in_ip"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+    t.index ["email"], name: "index_users_on_email", unique: true
+    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
+  end
+
 end
diff --git a/namemyapp/docker-compose.yml b/namemyapp/docker-compose.yml
index 15b4455..ac3d760 100644
--- a/namemyapp/docker-compose.yml
+++ b/namemyapp/docker-compose.yml
@@ -1,4 +1,4 @@
-version: '3'
+version: '2'
 services:
   web:
     build: .
diff --git a/namemyapp/test/fixtures/users.yml b/namemyapp/test/fixtures/users.yml
new file mode 100644
index 0000000..937a0c0
--- /dev/null
+++ b/namemyapp/test/fixtures/users.yml
@@ -0,0 +1,11 @@
+# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html
+
+# This model initially had no columns defined.  If you add columns to the
+# model remove the '{}' from the fixture names and add the columns immediately
+# below each fixture, per the syntax in the comments below
+#
+one: {}
+# column: value
+#
+two: {}
+#  column: value
diff --git a/namemyapp/test/models/user_test.rb b/namemyapp/test/models/user_test.rb
new file mode 100644
index 0000000..82f61e0
--- /dev/null
+++ b/namemyapp/test/models/user_test.rb
@@ -0,0 +1,7 @@
+require 'test_helper'
+
+class UserTest < ActiveSupport::TestCase
+  # test "the truth" do
+  #   assert true
+  # end
+end
-- 
2.11.0

