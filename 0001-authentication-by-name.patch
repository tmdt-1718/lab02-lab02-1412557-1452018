From cb93cd9ec2650f03774cce26eeaa72c14b879ff0 Mon Sep 17 00:00:00 2001
From: 1452018 <1452018@github.com>
Date: Mon, 23 Oct 2017 19:53:27 +0700
Subject: [PATCH] authentication by name

---
 .../app/controllers/application_controller.rb      | 10 ++++++++
 namemyapp/app/models/user.rb                       | 29 ++++++++++++++++++++--
 .../app/views/devise/registrations/edit.html.erb   |  5 ++--
 .../app/views/devise/registrations/new.html.erb    |  1 +
 namemyapp/app/views/devise/sessions/new.html.erb   |  1 +
 namemyapp/config/initializers/devise.rb            |  2 +-
 namemyapp/db/schema.rb                             |  3 ++-
 7 files changed, 44 insertions(+), 7 deletions(-)

diff --git a/namemyapp/app/controllers/application_controller.rb b/namemyapp/app/controllers/application_controller.rb
index 1c07694..91e24fd 100644
--- a/namemyapp/app/controllers/application_controller.rb
+++ b/namemyapp/app/controllers/application_controller.rb
@@ -1,3 +1,13 @@
 class ApplicationController < ActionController::Base
   protect_from_forgery with: :exception
+  before_action :configure_permitted_parameters, if: :devise_controller?
+  
+  protected
+
+  def configure_permitted_parameters
+    added_attrs = [:name, :email, :password, :password_confirmation, :remember_me]
+    devise_parameter_sanitizer.permit :sign_up, keys: added_attrs
+    devise_parameter_sanitizer.permit :account_update, keys: added_attrs
+  end
+
 end
diff --git a/namemyapp/app/models/user.rb b/namemyapp/app/models/user.rb
index 5ea265f..d3133ca 100644
--- a/namemyapp/app/models/user.rb
+++ b/namemyapp/app/models/user.rb
@@ -1,7 +1,32 @@
 class User < ApplicationRecord
   # Include default devise modules. Others available are:
   # :confirmable, :lockable, :timeoutable and :omniauthable
+
   devise :database_authenticatable, :registerable,
-         :recoverable, :rememberable, :trackable, :validatable
- 
+         :recoverable, :rememberable, :trackable, :validatable,:authentication_keys => [:login]
+
+
+  validates :name,
+           :presence => true,
+           :uniqueness => {
+             :case_sensitive => false
+           } # etc.
+    attr_accessor :login
+    def self.find_for_database_authentication(warden_conditions)
+     conditions = warden_conditions.dup
+     if login = conditions.delete(:login)
+       where(conditions.to_h).where(["lower(name) = :value OR lower(email) = :value", { :value => login.downcase }]).first
+     elsif conditions.has_
+       key?(:name) || conditions.has_key?(:email)
+       where(conditions.to_h).first
+     end
+   end
+
+   validate :validate_username
+
+   def validate_username
+     if User.where(email: name).exists?
+       errors.add(:name, :invalid)
+     end
+   end
 end
diff --git a/namemyapp/app/views/devise/registrations/edit.html.erb b/namemyapp/app/views/devise/registrations/edit.html.erb
index 5db350b..2e02c24 100644
--- a/namemyapp/app/views/devise/registrations/edit.html.erb
+++ b/namemyapp/app/views/devise/registrations/edit.html.erb
@@ -5,11 +5,10 @@
 
   <div class="form-inputs">
     <%= f.input :email, required: true, autofocus: true %>
-
-    <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
+      <%= f.input :name, required: true, autofocus: true%>
+    <% if devise_mapping.confirmable?   <%= f.input :name, required: true, autofocus: true%>&& resource.pending_reconfirmation? %>
       <p>Currently waiting confirmation for: <%= resource.unconfirmed_email %></p>
     <% end %>
-
     <%= f.input :password, autocomplete: "off", hint: "leave it blank if you don't want to change it", required: false %>
     <%= f.input :password_confirmation, required: false %>
     <%= f.input :current_password, hint: "we need your current password to confirm your changes", required: true %>
diff --git a/namemyapp/app/views/devise/registrations/new.html.erb b/namemyapp/app/views/devise/registrations/new.html.erb
index 34b4279..f530cf0 100644
--- a/namemyapp/app/views/devise/registrations/new.html.erb
+++ b/namemyapp/app/views/devise/registrations/new.html.erb
@@ -5,6 +5,7 @@
 
   <div class="form-inputs">
     <%= f.input :email, required: true, autofocus: true %>
+    <%= f.input :name, required: true %>
     <%= f.input :password, required: true, hint: ("#{@minimum_password_length} characters minimum" if @minimum_password_length) %>
     <%= f.input :password_confirmation, required: true %>
   </div>
diff --git a/namemyapp/app/views/devise/sessions/new.html.erb b/namemyapp/app/views/devise/sessions/new.html.erb
index 31f8a4d..6750f50 100644
--- a/namemyapp/app/views/devise/sessions/new.html.erb
+++ b/namemyapp/app/views/devise/sessions/new.html.erb
@@ -3,6 +3,7 @@
 <%= simple_form_for(resource, as: resource_name, url: session_path(resource_name)) do |f| %>
   <div class="form-inputs">
     <%= f.input :email, required: false, autofocus: true %>
+    <%= f.input :login, required: false, autofocus: true %>
     <%= f.input :password, required: false %>
     <%= f.input :remember_me, as: :boolean if devise_mapping.rememberable? %>
   </div>
diff --git a/namemyapp/config/initializers/devise.rb b/namemyapp/config/initializers/devise.rb
index 733e637..0b07909 100644
--- a/namemyapp/config/initializers/devise.rb
+++ b/namemyapp/config/initializers/devise.rb
@@ -83,7 +83,7 @@ Devise.setup do |config|
   # may want to disable generating routes to Devise's sessions controller by
   # passing skip: :sessions to `devise_for` in your config/routes.rb
   config.skip_session_storage = [:http_auth]
-
+  config.authentication_keys = [ :login ]
   # By default, Devise cleans up the CSRF token on authentication to
   # avoid CSRF token fixation attacks. This means that, when using AJAX
   # requests for sign in and sign up, you need to get a new CSRF token
diff --git a/namemyapp/db/schema.rb b/namemyapp/db/schema.rb
index c9346ed..c24c7f2 100644
--- a/namemyapp/db/schema.rb
+++ b/namemyapp/db/schema.rb
@@ -10,7 +10,7 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 20171022011342) do
+ActiveRecord::Schema.define(version: 20171023040004) do
 
   # These are extensions that must be enabled in order to support this database
   enable_extension "plpgsql"
@@ -51,6 +51,7 @@ ActiveRecord::Schema.define(version: 20171022011342) do
     t.string "last_sign_in_ip"
     t.datetime "created_at", null: false
     t.datetime "updated_at", null: false
+    t.string "name"
     t.index ["email"], name: "index_users_on_email", unique: true
     t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
   end
-- 
2.11.0

